version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: peat_legacy
      POSTGRES_USER: peat_user
      POSTGRES_PASSWORD: peat_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peat_user -d peat_legacy"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Ray Peat Legacy Backend API
  backend:
    build:
      context: .
      dockerfile: inference/backend/Dockerfile
    environment:
      - DATABASE_URL=postgresql://peat_user:peat_password@postgres:5432/peat_legacy
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./embedding:/app/embedding
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  # Frontend Development Server
  frontend:
    build:
      context: web_ui/frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./web_ui/frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend

  # Qdrant Vector Database (Alternative to ChromaDB)
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334

  # Data processing service
  processor:
    build:
      context: .
      dockerfile: preprocessing/Dockerfile
    volumes:
      - ./data:/app/data
      - ./preprocessing:/app/preprocessing
      - ./logs:/app/logs
    environment:
      - ENVIRONMENT=development
    env_file:
      - .env
    profiles:
      - processing

  # Jupyter notebook for development and analysis
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    profiles:
      - development

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  default:
    name: peat_legacy_network 